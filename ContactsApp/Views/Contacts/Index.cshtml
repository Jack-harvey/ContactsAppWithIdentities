@model PaginatedList<ContactsApp.Models.Contact>

@{
    ViewData["Title"] = "Index";
}

<h1>Index - oF dOOM!</h1>


<div class="d-flex">
    <div class="flex-grow-1 ps-2">
        <p>
            <a asp-action="Create">Create New</a>
        </p>

    </div>
    <div class="flex-grow-1">
        <h5 id=draculaBat>(㇏(•̀ᵥᵥ•́)ノ)</h5>
    </div>
    <div class="ps-2">
        <form asp-action="Index" method="POST" id="contacts-index-form">
            <div class="form-actions no-color">
                <p>
                    Find by name: <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" />
                    <button id=searchButton type="submit" class="btn btn-default">
                        <i class="fa-solid fa-magnifying-glass"></i>
                    </button>|
                    <a id=eraseSearch asp-action="Index"><i class="fa-solid fa-eraser"></i></a>
                </p>
            </div>

            <input type="hidden" id="sortOrder" name="sortOrder" value="@ViewData["CurrentSort"]" />
            <input type="hidden" id="pageNumber" name="pageNumber" value="@Model.PageIndex" />
            <input type="hidden" id="rowsOnEachPage" name="rowsOnEachPage" value="@ViewData["rowsOnEachPage"]" />

        </form>

    </div>
</div>


<table class="table table-hover">
    <thead>
        <tr>
            <th>
                First Name
            </th>
            <th>
                @*<a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Last Name</a>*@
                <a href=# id="nameSort" class="sort-link" data-sort-order="@ViewData["NameSortParm"]">Last Name</a>
            </th>
            <th>
                @*<a asp-action="Index" asp-route-sortOrder="@ViewData["CompanySortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Company</a>*@
                <a href=# id="companySort" class="sort-link" data-sort-order="@ViewData["CompanySortParm"]">Company</a>
            </th>
            <th>
                Mobile
            </th>
            <th>
                E-Mail
            </th>
            <th>
                @*<a asp-action="Index" asp-route-sortOrder="@ViewData["BirthDateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Date of Birth</a>*@
                <a href=# id="birthdateSort" class="sort-link" data-sort-order="@ViewData["BirthDateSortParm"]">Birthdate</a>
            </th>
            <th>
                @*<a asp-action="Index" asp-route-sortOrder="@ViewData["CategoryIdSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Category</a>*@
                <a href=# id="categorySort" class="sort-link" data-sort-order="@ViewData["CategoryIdSortParm"]">Category</a>
            </th>
        </tr>
    </thead>

    <tbody>
        @foreach (var item in Model)
        {
            <tr onclick="location.href ='@(Url.Action("Details", "Contacts", new { id = item.ContactId}))'">
                <td>
                    @Html.DisplayFor(modelItem => item.Firstname)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Lastname)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Company.CompanyName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Mobile)
                </td>
                <td id="emailTableData">
                    @Html.DisplayFor(modelItem => item.Email)
                    @*<a name="emailStopLink">@Html.DisplayFor(modelItem => item.Email</a>)*@
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Birthday)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.Description)
                </td>
                <td>
                    @*<a id="detailLink" asp-action="Details" asp-route-id="@item.ContactId"><i class="fa-solid fa-address-card"></i></a> |*@
                    <a id="editLink" asp-action="Edit" asp-route-id="@item.ContactId"><i class="fa-solid fa-pen-to-square"></i></a> |
                    <a id="deleteLink" asp-action="Delete" asp-route-id="@item.ContactId"><i class="fa-solid fa-trash-can"></i></a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    var rowsOnEachPage = (int?)@ViewData["rowsOnEachPage"] ?? 8;
}

<div class="d-flex">
    <div class="flex-grow-1 ps-2">
        <form>
            <select id="ddNumPages" class="form-select form-select-sm">
                <option selected="@(rowsOnEachPage == 8)" value="8">8</option>
                <option selected="@(rowsOnEachPage == 16)" value="16">16</option>
                <option selected="@(rowsOnEachPage == 32)" value="32">32</option>
            </select>
        </form>
    </div>
    <form>
        <div class="flex-grow-1 text-end pe-2">
            <button id="btnPrev" type="button" class="btn btn-primary @prevDisabled" @prevDisabled>Previous</button>
            <button id="btnNext" type="button" class="btn btn-primary @nextDisabled" @nextDisabled>Next</button>
        </div>
    </form>
</div>


@section Scripts {
<script>

    document.getElementById("btnPrev").addEventListener('click', function() {
        const pageNumberElement = document.getElementById("pageNumber");
        let pageNumber = Number(pageNumberElement.value);
        pageNumber--;
        pageNumberElement.value = pageNumber;
        document.getElementById('contacts-index-form').submit();
    });

    document.getElementById("btnNext").addEventListener('click', function() {
        const pageNumberElement = document.getElementById("pageNumber");
        let pageNumber = Number(pageNumberElement.value);
        pageNumber++;
        pageNumberElement.value = pageNumber;
        document.getElementById('contacts-index-form').submit();
    });

    document.getElementById("ddNumPages").addEventListener('change', function() {
        document.getElementById("rowsOnEachPage").value = this.value;
        document.getElementById('contacts-index-form').submit();

    });

    document.getElementById("nameSort").addEventListener('click', function() {
        //.. do stuff
        //const nameSortElement = this; // this refers to the thing that called or triggered this function
        //document.getElementById("sortOrder").value = nameSortElement.dataset.sortOrder;
        updateSortOrder(this);

        document.getElementById('contacts-index-form').submit();

    });

    document.getElementById("companySort").addEventListener('click', function() {
        //.. do stuff
        //const nameSortElement = this; // this refers to the thing that called or triggered this function
        //document.getElementById("sortOrder").value = nameSortElement.dataset.sortOrder;
        updateSortOrder(this);

        document.getElementById('contacts-index-form').submit();

    });

            document.getElementById("birthdateSort").addEventListener('click', function() {
        updateSortOrder(this);

        document.getElementById('contacts-index-form').submit();

    });

            document.getElementById("categorySort").addEventListener('click', function() {
        updateSortOrder(this);

        document.getElementById('contacts-index-form').submit();

    });

    function updateSortOrder(target) {
        document.getElementById("sortOrder").value = target.dataset.sortOrder;
    }

</script>
}